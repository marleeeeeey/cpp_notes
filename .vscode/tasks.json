{
  // See https://go.microsoft.com/fwlink/?LinkId=733558
  // for the documentation about the tasks.json format
  "version": "2.0.0",
  "tasks": [
    {
      "label": "010. Set Current File As Sourse",
      "command": "cmake -E echo code/${fileBasename} > file_to_build.txt",
      "type": "shell",
      "options": {
        "statusbar": {
          "hide": false,
          "label": "SetCurrentFileAsSourse"
        }
      },
    },
    {
      "label": "020. + Configure",
      "command": [
        "cmake -S . -B build/Debug -DCMAKE_BUILD_TYPE=Debug -GNinja -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_EXPORT_COMPILE_COMMANDS=ON && cmake -E copy build/Debug/compile_commands.json build/compile_commands.json"
      ],
      "options": {
        "statusbar": {
          "hide": true,
          "label": "Configure"
        }
      },
      "type": "shell"
    },
    {
      "label": "030. + Build",
      "command": " cmake --build build/Debug -- -k 0 ",
      "dependsOn": [
        "020. + Configure"
      ],
      "options": {
        "statusbar": {
          "hide": false,
          "label": "Build"
        }
      },
      "type": "shell"
    },
    {
      "label": "040. + Run",
      "command": "${workspaceFolder}/build/Debug/cpp_file_example.exe",
      "dependsOn": [
        "030. + Build"
      ],
      "options": {
        "statusbar": {
          "hide": false,
          "label": "Run"
        }
      },
      "type": "shell"
    },
    {
      "label": "050. + Run with Deleaker",
      "command": "DeleakerConsole.exe --export-xml-report-on-exit leak_report.xml --run ${workspaceFolder}/build/Debug/cpp_file_example.exe /someOption && python ${workspaceFolder}/parse_deleaker_report.py",
      "dependsOn": [
        "030. + Build"
      ],
      "options": {
        "statusbar": {
          "hide": false,
          "label": "RunWithDeleaker"
        }
      },
      "type": "shell"
    },
    {
      "label": "090. Compile ACTIVE file to ASM",
      "type": "shell",
      "command": "cmake -E make_directory build && clang -O1 -g0 -mllvm --x86-asm-syntax=intel -S ${file} -o ${workspaceFolder}/build/${fileBasename}.s",
      "args": [],
      "dependsOn": [
        "G010. Create Build Directory"
      ]
    },
  ]
}